name: Publish

on:
  push:
    branches: [main]
    paths:
      - 'package.json'
      - 'CHANGELOG.json'

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: yarn install --immutable

      - name: Build
        run: yarn build

      - name: Check if version changed
        id: version-check
        run: |
          # Get current version from package.json
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "current-version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

          # Check if this version is already published
          if npm view $(node -p "require('./package.json').name")@$CURRENT_VERSION version 2>/dev/null; then
            echo "Version $CURRENT_VERSION already published"
            echo "should-publish=false" >> $GITHUB_OUTPUT
          else
            echo "Version $CURRENT_VERSION not yet published"
            echo "should-publish=true" >> $GITHUB_OUTPUT
          fi

      - name: Publish to NPM
        if: steps.version-check.outputs.should-publish == 'true'
        run: |
          echo "Publishing version ${{ steps.version-check.outputs.current-version }}"
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Git Tag
        if: steps.version-check.outputs.should-publish == 'true'
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Action"
          git tag "v${{ steps.version-check.outputs.current-version }}"
          git push origin "v${{ steps.version-check.outputs.current-version }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        if: steps.version-check.outputs.should-publish == 'true'
        run: |
          # Extract changelog for this version
          VERSION="${{ steps.version-check.outputs.current-version }}"

          # Create release
          gh release create "v$VERSION" \
            --title "Release v$VERSION" \
            --notes "See CHANGELOG.json for details" \
            --latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}